import { useState } from "react";
import { 
  Plus,
  Edit,
  Trash2,
  Search
} from 'lucide-react';

const AmenitiesManagement = () => {
  const [searchTerm, setSearchTerm] = useState('');
  const [showAddModal, setShowAddModal] = useState(false);

  const amenitiesList = [
    { id: 1, name: 'Wifi mi·ªÖn ph√≠', icon: 'üì∂', category: 'C√¥ng ngh·ªá', description: 'Internet t·ªëc ƒë·ªô cao mi·ªÖn ph√≠' },
    { id: 2, name: 'B√£i ƒë·∫≠u xe', icon: 'üöó', category: 'Ti·ªán √≠ch', description: 'Ch·ªó ƒë·∫≠u xe an to√†n, c√≥ b·∫£o v·ªá' },
    { id: 3, name: 'B·ªØa s√°ng', icon: 'üç≥', category: 'ƒÇn u·ªëng', description: 'Buffet s√°ng ƒëa d·∫°ng m√≥n √Å - √Çu' },
    { id: 4, name: 'H·ªì b∆°i', icon: 'üèä', category: 'Gi·∫£i tr√≠', description: 'H·ªì b∆°i ngo√†i tr·ªùi v·ªõi view ƒë·∫πp' },
    { id: 5, name: 'Gym', icon: 'üí™', category: 'Th·ªÉ thao', description: 'Ph√≤ng t·∫≠p gym hi·ªán ƒë·∫°i 24/7' },
    { id: 6, name: 'Spa', icon: 'üíÜ', category: 'Th∆∞ gi√£n', description: 'D·ªãch v·ª• spa v√† massage chuy√™n nghi·ªáp' },
    { id: 7, name: 'Nh√† h√†ng', icon: 'üçΩÔ∏è', category: 'ƒÇn u·ªëng', description: 'Nh√† h√†ng cao c·∫•p ph·ª•c v·ª• 24/7' },
    { id: 8, name: 'Bar', icon: 'üç∏', category: 'ƒÇn u·ªëng', description: 'Bar v·ªõi kh√¥ng gian sang tr·ªçng' },
  ];

  // Mock data cho room types ƒë·ªÉ t√≠nh usage
  const roomTypes = [
    { id: 1, name: 'Deluxe Ocean View', amenities: [1, 2, 3, 4] },
    { id: 2, name: 'Standard Room', amenities: [1, 2, 3] },
    { id: 3, name: 'Suite Premium', amenities: [1, 2, 3, 4, 5, 6, 7, 8] },
  ];

  const filteredAmenities = amenitiesList.filter(amenity =>
    amenity.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
    amenity.category.toLowerCase().includes(searchTerm.toLowerCase())
  );

  const renderAddModal = () => {
    if (!showAddModal) return null;

    return (
      <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
        <div className="bg-white rounded-lg p-6 w-full max-w-md">
          <div className="flex justify-between items-center mb-6">
            <h3 className="text-xl font-semibold text-gray-800">Th√™m ti·ªán √≠ch m·ªõi</h3>
            <button 
              onClick={() => setShowAddModal(false)}
              className="text-gray-500 hover:text-gray-700"
            >
              ‚úï
            </button>
          </div>

          <form className="space-y-4">
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">T√™n ti·ªán √≠ch</label>
              <input
                type="text"
                className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
                placeholder="VD: Wifi mi·ªÖn ph√≠"
              />
            </div>
            
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">Icon (Emoji)</label>
              <input
                type="text"
                className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
                placeholder="üì∂"
              />
            </div>
            
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">Danh m·ª•c</label>
              <select className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
                <option value="">Ch·ªçn danh m·ª•c</option>
                <option value="C√¥ng ngh·ªá">C√¥ng ngh·ªá</option>
                <option value="Ti·ªán √≠ch">Ti·ªán √≠ch</option>
                <option value="ƒÇn u·ªëng">ƒÇn u·ªëng</option>
                <option value="Gi·∫£i tr√≠">Gi·∫£i tr√≠</option>
                <option value="Th·ªÉ thao">Th·ªÉ thao</option>
                <option value="Th∆∞ gi√£n">Th∆∞ gi√£n</option>
              </select>
            </div>
            
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">M√¥ t·∫£</label>
              <textarea
                rows="3"
                className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
                placeholder="M√¥ t·∫£ chi ti·∫øt v·ªÅ ti·ªán √≠ch..."
              />
            </div>

            <div className="flex justify-end space-x-3 pt-4">
              <button
                type="button"
                onClick={() => setShowAddModal(false)}
                className="px-4 py-2 border border-gray-300 rounded-lg hover:bg-gray-50"
              >
                H·ªßy
              </button>
              <button
                type="submit"
                className="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700"
              >
                Th√™m ti·ªán √≠ch
              </button>
            </div>
          </form>
        </div>
      </div>
    );
  };

  return (
    <div className="p-8">
      <div className="mb-8">
        <h1 className="text-3xl font-bold text-gray-800 mb-2">Qu·∫£n l√Ω ti·ªán √≠ch</h1>
        <p className="text-gray-600">
          Qu·∫£n l√Ω c√°c ti·ªán √≠ch c·ªßa kh√°ch s·∫°n - ƒê·ªÉ khi th√™m ph√≤ng th√¨ c√≥ th·ªÉ ch·ªçn cho nhanh + d√πng ƒë·ªì l·ªçc
        </p>
      </div>

      <div className="bg-white rounded-lg shadow">
        <div className="p-6 border-b border-gray-200">
          <div className="flex justify-between items-center mb-4">
            <h2 className="text-xl font-semibold text-gray-800">Danh s√°ch ti·ªán √≠ch</h2>
            <button 
              onClick={() => setShowAddModal(true)}
              className="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 flex items-center gap-2"
            >
              <Plus className="w-4 h-4" />
              Th√™m ti·ªán √≠ch
            </button>
          </div>

          <div className="relative">
            <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4" />
            <input
              type="text"
              placeholder="T√¨m ki·∫øm ti·ªán √≠ch ho·∫∑c danh m·ª•c..."
              className="w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
              value={searchTerm}
              onChange={(e) => setSearchTerm(e.target.value)}
            />
          </div>
        </div>

        <div className="p-6">
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
            {filteredAmenities.map((amenity) => {
              const usageCount = roomTypes.reduce((count, room) => 
                count + (room.amenities.includes(amenity.id) ? 1 : 0), 0
              );
              
              return (
                <div key={amenity.id} className="border border-gray-200 rounded-lg p-4 hover:bg-gray-50">
                  <div className="flex items-start justify-between mb-3">
                    <div className="flex items-center">
                      <span className="text-2xl mr-3">{amenity.icon}</span>
                      <div>
                        <h3 className="font-medium text-gray-800">{amenity.name}</h3>
                        <span className="text-xs text-blue-600 bg-blue-100 px-2 py-1 rounded">
                          {amenity.category}
                        </span>
                      </div>
                    </div>
                    <div className="flex space-x-2">
                      <button className="text-blue-600 hover:text-blue-800" title="Ch·ªânh s·ª≠a">
                        <Edit className="w-4 h-4" />
                      </button>
                      <button className="text-red-600 hover:text-red-800" title="X√≥a">
                        <Trash2 className="w-4 h-4" />
                      </button>
                    </div>
                  </div>
                  
                  <p className="text-sm text-gray-600 mb-3">{amenity.description}</p>
                  
                  <div className="flex justify-between items-center text-sm">
                    <span className="text-gray-500">ƒê∆∞·ª£c s·ª≠ d·ª•ng trong:</span>
                    <span className="font-medium text-blue-600">{usageCount} lo·∫°i ph√≤ng</span>
                  </div>
                </div>
              );
            })}
          </div>
        </div>

        {renderAddModal()}
      </div>

      {/* Usage Statistics */}
      <div className="mt-8 bg-white rounded-lg shadow">
        <div className="p-6 border-b border-gray-200">
          <h2 className="text-xl font-semibold text-gray-800">Th·ªëng k√™ s·ª≠ d·ª•ng ti·ªán √≠ch</h2>
        </div>
        <div className="p-6">
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
            {amenitiesList.map((amenity) => {
              const usageCount = roomTypes.reduce((count, room) => 
                count + (room.amenities.includes(amenity.id) ? 1 : 0), 0
              );
              const usagePercentage = Math.round((usageCount / roomTypes.length) * 100);
              
              return (
                <div key={amenity.id} className="bg-gray-50 p-4 rounded-lg">
                  <div className="flex items-center justify-between mb-2">
                    <div className="flex items-center">
                      <span className="text-lg mr-2">{amenity.icon}</span>
                      <span className="text-sm font-medium text-gray-700">{amenity.name}</span>
                    </div>
                    <span className="text-lg font-bold text-blue-600">{usageCount}</span>
                  </div>
                  <div className="mb-2">
                    <div className="bg-gray-200 rounded-full h-2">
                      <div 
                        className="bg-blue-600 h-2 rounded-full" 
                        style={{ width: `${usagePercentage}%` }}
                      ></div>
                    </div>
                  </div>
                  <p className="text-xs text-gray-500">
                    {usagePercentage}% lo·∫°i ph√≤ng s·ª≠ d·ª•ng
                  </p>
                </div>
              );
            })}
          </div>
        </div>
      </div>
    </div>
  );
};

export default AmenitiesManagement;
